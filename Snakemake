# python syntax
import os
from os import path
from glob import glob


GENOME_VER = "/home/mehtass/data/genome_data/ensemble_2013/Schizosaccharomyces_pombe_ensemble"
TOPHAT_VER = "tophat/2.0.9/bowtie2-2.2.0" # we freeze the version of tophat to this one.  If necessary we can change this to run the whole analysis again.

dirname_part_prog = TOPHAT_VER.replace( "/", "" ) # the output directory name will have the tophat version baked in for further reference.

sequence_files = glob( "sequence_files/*.fastq.gz" )
dirnames_base = [ a.split("/")[1].split("_")[0] for a in sequence_files ]

op_dirnames = ["alignment_files/"+a+"_"+dirname_part_prog for a in dirnames_base]

opnames_pos = [ fname+"_pos.bam" for fname in op_dirnames ] # all the positive strand bam files
opnames_neg = [ fname+"_neg.bam" for fname in op_dirnames ] # all the negative strand bam files
BAMFNAMES = opnames_pos + opnames_neg

BAIFNAMES = [ fname+".bai" for fname in BAMFNAMES ]

###############################################
"""Debugging comments, we will remove them once we are done with them"""
# print( sequence_files ) # for debugging
# print( op_dirnames ) # for debugging
# print( BAMFNAMES )   # for debuggin
# print( BAIFNAMES )   # for debuggin

### My rules
rule final:
    params: batch = "-l nodes=1:gpfs"
    input: [fname+'.bai' for fname in BAMFNAMES]

rule indexbam:
    params: batch = "-l nodes=1:gpfs"
    input: expand('alignment_files/{bamfnames}', bamfnames=BAMFNAMES )
    shell: expand( "module load samtools; samtools index -i {bamfnames}", bamfnames=BAMFNAMES )

rule tophatalign:
    params: batch = "-l nodes=1:gpfs"
    input: sequence_files, TOPHAT_VER
    shell: expand( """
        module load {tophat}; 
	tophat \
	-p 32 \
	--library-type fr-secondstrand \
	-r 250 \
	-i 40 \
	-I 900 \
	--microexon-search \
	-o {op_dirnames} \
	{genome_ver} \
	{sequence_files}
	""", tophat=TOPHAT_VER, genome_ver=GENOME_VER, op_dirnames=op_dirnames, sequence_files=sequence_files)

rule pos_neg:
    params: batch = "-l nodes=1:gpfs"
    input: expand( '{op_dirnames}/accepted_hits.bam', op_dirnames=op_dirnames )
    shell: expand( """
    module load samtools;
    samtools view -F 0x10 -b {op_dirnames}/accepted_hits.bam > {opnames_pos};
    samtools view -f 0x10 -b {op_dirnames}/accepted_hits.bam > {opnames_neg};
    """, op_dirnames=op_dirnames, opnames_pos=opnames_pos, opnames_neg=opnames_neg )


### Rules copied from Sean's files
## rule indexbam:
##     """Index a bam file using bamtools, creating .bam.bai"""
##     input: "{base}.bam"
##     output: "{base}.bam.bai"
##     params: batch = "-l nodes=1:gpfs"
##     threads = 1
##     shell: "module load bamtools; bamtools index -in {input}
## 
## 
## rule rnaalignment:
##     """Align the fastq files"""
##     input: 
