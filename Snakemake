# python syntax 
import os 
from os import path 
from glob import glob


GENOME_VER = "/home/mehtass/data/genome_data/ensemble_2013/Schizosaccharomyces_pombe_ensemble"
# TOPHAT_VER = "tophat/2.0.9/bowtie2-2.2.0" # we freeze the version of tophat to this one.  If necessary we can change this to run the whole analysis again.
TOPHAT = "tophat/2.0.9/bowtie2-2.2.0" # we freeze the version of tophat to this one.  If necessary we can change this to run the whole analysis again.

# dirname_part_prog = TOPHAT_VER.replace( "/", "" ) # the output directory name will have the tophat version baked in for further reference.
dirname_part_prog = TOPHAT.replace( "/", "" ) # the output directory name will have the tophat version baked in for further reference.

sequence_files = glob( "sequence_files/*.fastq.gz" )
print( sequence_files ) # for debugging
SAMPLENAMES = [fname.split('/')[1].split('.')[0] for fname in sequence_files ]
print( SAMPLENAMES ) # for debugging
dirnames_base = [ a.split("/")[1].split("_")[0] for a in sequence_files ]

op_dirnames = [ 'alignment_files/' + sample for sample in SAMPLENAMES ] 
opnames_pos = [ 'alignment_files/' + sample + "_pos.bam" for sample in SAMPLENAMES ] # all the positive strand bam files 
opnames_neg = [ 'alignment_files/' + sample + "_neg.bam" for sample in SAMPLENAMES ] # all the negative strand bam files
BAMFNAMES = opnames_pos + opnames_neg

BAIFNAMES = [ fname+".bai" for fname in BAMFNAMES ]

###############################################
"""Debugging comments, we will remove them once we are done with them"""
# print( sequence_files ) # for debugging
print( op_dirnames ) # for debugging
print( BAMFNAMES )   # for debuggin
# print( BAIFNAMES )   # for debuggin

### My rules
rule final:
    params: batch = "-l nodes=1:gpfs"
    input: [fname + '.bai' for fname in BAMFNAMES]

rule indexbam:
    params: batch = "-l nodes=1:gpfs"
    input: 'alignment_files/{base}.bam'
    output: 'alignment_files/{base}.bam.bai'
    shell: "module load samtools; samtools index -i {input}"

rule tophatalign:
    params: batch = "-l nodes=1:gpfs"
    input: 'sequence_files/{base}.fastq.gz'
    output: 'alignment_files/{base}_pos.bam', 'alignment_files/{base}_neg.bam'
    shell: """
        module load tophat/2.0.9/towtie2-2.2.0; 
	tophat \
	-p 32 \
	--library-type fr-secondstrand \
	-r 250 \
	-i 40 \
	-I 900 \
	--microexon-search \
	-o alignment_files/{base} \
	/home/mehtass/data/genome_data/ensemble_2013/Schizosaccharomyces_pombe_ensemble \
	{input};
	module load samtools;
        samtools view -F 0x10 -b alignment_files/{base}/accepted_hits.bam > alignment_files/{base}_pos.bam;
        samtools view -f 0x10 -b alignment_files/{base}/accepted_hits.bam > alignment_files/{base}_neg.bam;
"""

## rule pos_neg:
##     params: batch = "-l nodes=1:gpfs"
##     input: expand( '{op_dirnames}/accepted_hits.bam', op_dirnames=op_dirnames )
##     shell: expand( """
##     module load samtools;
##     samtools view -F 0x10 -b {op_dirnames}/accepted_hits.bam > {opnames_pos};
##     samtools view -f 0x10 -b {op_dirnames}/accepted_hits.bam > {opnames_neg};
##     """, op_dirnames=op_dirnames, opnames_pos=opnames_pos, opnames_neg=opnames_neg )
## 

### Rules copied from Sean's files
## rule indexbam:
##     """Index a bam file using bamtools, creating .bam.bai"""
##     input: "{base}.bam"
##     output: "{base}.bam.bai"
##     params: batch = "-l nodes=1:gpfs"
##     threads = 1
##     shell: "module load bamtools; bamtools index -in {input}
## 
## 
## rule rnaalignment:
##     """Align the fastq files"""
##     input: 
